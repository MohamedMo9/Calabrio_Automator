import PySimpleGUI as sg
import pandas as pd
import pyodbc
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait as wait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
from selenium.common.exceptions import TimeoutException
from datetime import datetime
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
import time
import requests
import warnings
import os
import urllib.request as urllib

now = datetime.now()
warnings.filterwarnings("ignore")


path = "C:\\Calabrio\\"
isExist = os.path.exists(path)
if not isExist:
   os.makedirs(path)
   # Download_Edge_Web_Driver
   url = "https://github.com/MohamedMo9/Calabrio_Automator/raw/main/msedgedriver.exe"
   filename = 'C:\\Calabrio\\msedgedriver.exe'
   urllib.urlretrieve(url, filename)

file_name = os.getlogin() + "_" + str(now.strftime("%m-%d-%Y_%H_%M_%S")) + '.txt'
with open('C:\\Calabrio\\' + file_name, 'w') as f:
    f.write('')

##########################################################################################################
def run_sql(TM,activity,start_dt,end_dt,timezone):
    master = "https://raw.githubusercontent.com/MohamedMo9/Calabrio_Automator/main/sql"
    sql = requests.get(master)
    sql = sql.text
    cnxn = pyodbc.connect("Driver={SQL Server};"
                          "Server=cwfm-wise-sec.database.windows.net;"
                          "Database=mteuno03_wise_TeleoptiAnalytics;"
                          "Trusted_Connection=no;"
                          "uid=wise_CRAUser;pwd=uI!7bVWg52MiRnL339wA")
    rem_cmd = ' group by EM, DT, name, ActivityType,StartTime,EndTime order by 1,3,4 asc'

    team_filter = ''
    #if single team:
    if TM.find(',') < 0:
        team_filter = (" where TEAM <> '" + TM + "'").replace("<>", "=")

    #if multiple teams:
    if TM.find(',') >= 0:
        team_filter = (" where TEAM <>'" + TM + "'").replace("<>", "in (").replace(",", "','") + ")"

    #if_single_activity:
    activity_filter = (" and ActivityType <>'" + activity + "'").replace("<>", "=")

    #date_filter
    new_sql = sql.replace('DATE_START',start_dt).replace('DATE_END',end_dt).replace('TZ_VAL', str(timezone))

    sql_query = pd.read_sql_query(new_sql + team_filter + activity_filter + rem_cmd, cnxn)

    df = pd.DataFrame(sql_query)
    df.to_csv(r'C:\Calabrio\exported_data.csv', index=False, header=False)




################################################ GUI #####################


column1 = [
    [sg.Text("Team(s):       ")],
    [sg.Text("Old Activity:  ")],
    [sg.Text("New Activity: ")],
    [sg.Text("Dates:")],
    [sg.Text("", size=(0, 1), key='OUTPUT')],
    [sg.Text("", size=(0, 1), key='OUTPUT')],
    [sg.Ok("RUN", size=(7, 2))],

]
column2 = [
    [sg.Input(key='team')],
    [sg.Combo(['1:1','Admin','Admin (Trainer)','Chats','Emails','Meeting','Mentoring','Onboarding','Phones','Quality','SBS Chats','SBS Email','SBS Phones','Side Project','Standby','Training','Translation'],size=(28,1),key='old_activity')],
    [sg.Combo(['1:1','Admin','Admin (Trainer)','C Chat','C EMEA English - BaP','C EMEA English - Europe','C EMEA English - Investments','E Email','E EMEA - AM','E EMEA - BaS','E EMEA - COMP','E EMEA - ETS','E EMEA - HIW','E EMEA - LOG','E EMEA - Polish','E EMEA - PRI','E EMEA - Romanian','E EMEA - Turkish','E EMEA - Unbabel','E EMEA - VER','Meeting','Mentoring','Onboarding','P Callback','P Phone','P Voice - English - Europe','Quality','SBS Chats','SBS Email','SBS Phones','Side Project','Standby','Training','Translation'], size=(28,1) ,key='new_activity')],
    [sg.CalendarButton('From', target='from_date', pad=None, font=('Arial Black', 10, 'bold'),enable_events=True, key='from_date', size=(6,1), format=('%Y-%m-%d')),sg.Text("", key='from_date_val')],
    [sg.CalendarButton('TO', target='to_date', pad=None, font=('Arial Black', 10, 'bold'),enable_events=True, key='to_date', size=(6,1), format=('%Y-%m-%d')),sg.Text("", key='to_date_val')],
    [sg.Text("Enter Hours difference from UTC (+/-)", size=(0, 1)), sg.Input("", size=(11, 1), key='timezone')],
    [sg.Text("", size=(0, 1))]

]

layout = [[sg.Column(column1),sg.Column(column2)]]

window = sg.Window("Calabrio Automator", layout, finalize=True)

while True:
    event, values = window.read()

    if event == sg.WINDOW_CLOSED:
        break
    elif event == 'from_date':
        window['from_date_val'].update(values['from_date'])
        window['to_date_val'].update(values['to_date'])
    elif event == 'to_date':
        window['from_date_val'].update(values['from_date'])
        window['to_date_val'].update(values['to_date'])
    elif event == 'RUN':
        window['OUTPUT'].update('Loading.')
        sg.Window.refresh(window)
        team_gui = values['team']
        old_activity_gui = values['old_activity']
        new_activity_gui = values['new_activity']
        window['OUTPUT'].update(value=team_gui + "," + old_activity_gui + "," + new_activity_gui)
        team = team_gui
        old_activity = old_activity_gui
        new_activity = new_activity_gui
        start_dt = values['from_date']
        end_dt = values['to_date']
        timezone = int(values['timezone']) * 60
        run_sql(team, old_activity, start_dt, end_dt,timezone)

        with open('C:\\Calabrio\\exported_data.csv', newline='') as csvfile:
            data = list(csv.reader(csvfile))

        if len(data) == 0:
            sg.Popup("Selected filters didn't return any results.", title="Error")
        else:
            ser = ("C:\\Calabrio\\msedgedriver.exe")
            driver = webdriver.Edge(ser)
            driver.get("https://mteuno03.teleopticloud.com/Web/WFM/#/schedules")

            while True:
                try:
                    wait(driver, 1).until(EC.element_to_be_clickable((By.XPATH,
                                                                      "//nz-tree-select/div")))
                    time.sleep(3)
                    break
                except TimeoutException:
                    time.sleep(0.2)

                # functions


            def personal_activity():
                action = ActionChains(driver)
                action.key_down(Keys.LEFT_ALT).send_keys('P').key_up(Keys.LEFT_ALT).perform()
                wait(driver, 60).until(
                    EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), '" + "Add personal activity" + "')]")))


            def add_activity(agent_name, activity, date, start, end):
                action = ActionChains(driver)
                waitme = wait(driver, 100)
                # clear_team
                while True:
                    try:
                        wait(driver, 1).until(EC.element_to_be_clickable((By.XPATH,
                                                                          "//nz-tree-select/div")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button1 = wait(driver, 100).until(EC.element_to_be_clickable((By.XPATH, "//nz-tree-select/div")))
                # button.click()
                webdriver.ActionChains(driver).move_to_element(button1).click(button1).perform()
                for x in range(10):
                    action.send_keys(Keys.BACKSPACE).perform()

                time.sleep(0.2)

                # write_agent_name

                action = ActionChains(driver)
                while True:
                    try:
                        wait(driver, 1).until(EC.element_to_be_clickable((By.XPATH,
                                                                          "//html/body/app-root/div/div/schedules-day-page/nz-spin/div/div[1]/schedules-search-input/div/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)
                button2 = wait(driver, 10).until(EC.element_to_be_clickable((By.XPATH,
                                                                             "//html/body/app-root/div/div/schedules-day-page/nz-spin/div/div[1]/schedules-search-input/div/nz-input-group/input")))
                while True:
                    try:
                        wait(driver, 1).until(EC.element_to_be_clickable((By.XPATH,
                                                                          "//html/body/app-root/div/div/schedules-day-page/nz-spin/div/div[1]/schedules-search-input/div/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(1)
                time.sleep(2)
                button2.clear()
                button2.click()
                action.send_keys(agent_name).perform()

                # write_date

                action = ActionChains(driver)
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//input[@id='datePicker']")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button3 = wait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//input[@id='datePicker']")))
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//input[@id='datePicker']")))
                        break
                    except TimeoutException:
                        time.sleep(1)
                time.sleep(2)
                button3.clear()
                webdriver.ActionChains(driver).move_to_element(button3).click(button3).perform()
                time.sleep(0.2)

                action.send_keys(date).perform()
                action = ActionChains(driver)
                action.send_keys(Keys.RETURN).perform()

                # tick_agent
                action = ActionChains(driver)
                while True:
                    try:
                        wait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,
                                                                          "//div[@id='schedulesTable']/nz-table/nz-spin/div/div/nz-table-inner-scroll/cdk-virtual-scroll-viewport/div/table/tbody/tr[2]/td[2]/nz-row/nz-col/span/span")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                action = ActionChains(driver)

                while True:
                    try:
                        wait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,
                                                                          "//html/body/app-root/div/div/schedules-day-page/nz-spin/div/div[2]/nz-table/nz-spin/div/div/nz-table-inner-scroll/cdk-virtual-scroll-viewport/div[1]/table/tbody/tr[2]/td[4]")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                driver.execute_script("arguments[0].click();", wait(driver, 20).until(
                    EC.element_to_be_clickable((By.XPATH,
                                                "//div[@id='schedulesTable']/nz-table/nz-spin/div/div/nz-table-inner-scroll/cdk-virtual-scroll-viewport/div/table/tbody/tr[2]/td[2]/nz-row/nz-col/span/span"))))

                time.sleep(0.2)
                # select_Activity
                action = ActionChains(driver)

                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/nz-select/nz-select-top-control/nz-select-item")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button5 = wait(driver, 10).until(EC.element_to_be_clickable((By.XPATH,
                                                                             "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/nz-select/nz-select-top-control/nz-select-item")))
                webdriver.ActionChains(driver).move_to_element(button5).click(button5).perform()
                action.send_keys(activity).perform()
                action = ActionChains(driver)
                action.send_keys(Keys.RETURN).perform()

                # start_time
                action = ActionChains(driver)

                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker/span/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button6 = waitme.until(EC.element_to_be_clickable((By.XPATH,
                                                                   "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker/span/nz-input-group/input")))
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker/span/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(1)
                time.sleep(2)
                button6.clear()
                webdriver.ActionChains(driver).move_to_element(button6).click(button6).perform()
                action.send_keys(start, Keys.RETURN).perform()

                # end_time
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker[2]/span/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)
                action = ActionChains(driver)
                button = waitme.until(EC.element_to_be_clickable((By.XPATH,
                                                                  "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker[2]/span/nz-input-group/input")))

                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//div[@id='content-container']/schedules-day-page/nz-spin/div/action-form/nz-row/span/span/add-activity/time-picker[2]/span/nz-input-group/input")))
                        break
                    except TimeoutException:
                        time.sleep(1)
                time.sleep(2)
                button.clear()
                webdriver.ActionChains(driver).move_to_element(button).click(button).perform()
                action.send_keys(end, Keys.RETURN).perform()

                # Save_activity
                action = ActionChains(driver)
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              '//*[@data-testid="add-activity-save"]')))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button = waitme.until(EC.element_to_be_clickable((By.XPATH, '//*[@data-testid="add-activity-save"]')))
                webdriver.ActionChains(driver).move_to_element(button).click(button).perform()

                action = ActionChains(driver)
                while True:
                    try:
                        wait(driver, 1).until(EC.presence_of_element_located((By.XPATH,
                                                                              "//*[contains(text(), '" + "Successfully added activities for the selected agents" + "')]")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                while True:
                    try:
                        wait(driver, 1).until(EC.visibility_of_element_located((By.XPATH,
                                                                                "//*[contains(text(), '" + "Successfully added activities for the selected agents" + "')]")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                button = waitme.until(EC.element_to_be_clickable((By.XPATH, "//nz-notification/div/a/span/span")))
                button.click()

                while True:
                    try:
                        wait(driver, 1).until(EC.invisibility_of_element_located((By.XPATH,
                                                                                  "//*[contains(text(), '" + "Successfully added activities for the selected agents" + "')]")))
                        break
                    except TimeoutException:
                        time.sleep(0.2)

                print("[" + datetime.now().strftime(
                    "%H:%M:%S") + "] " + "Saved activity for: " + agent_name + " - " + activity + " From: " + start + " To: " + end)
                # driver.refresh()
                with open("C:\\Calabrio\\" + file_name, "a") as file_object:
                    file_object.write(datetime.now().strftime("%H:%M:%S") + "," + agent_name + "," + activity + "," + start + "," + end + "\n")


            for x in range(len(data)):
                add_activity(data[x][0], data[x][1].replace(old_activity, new_activity), data[x][2], data[x][3],
                             data[x][4])

        #########################################################

        ################################################ CONFIG RUN #####################

driver.close()
window.close()
